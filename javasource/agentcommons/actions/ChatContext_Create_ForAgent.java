// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package agentcommons.actions;

import static java.util.Objects.requireNonNull;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import agentcommons.impl.AgentImpl;
import agentcommons.impl.MxLogger;
import agentcommons.proxies.PromptToUse;
import genaicommons.proxies.DeployedModel;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.systemwideinterfaces.core.UserAction;

/**
 * This action creates a ChatContext based on an Agent and optionally a ContextObject.
 * 
 * If a ContextObject is passed, the variables in the prompt are replaced with attributes from the ContextObject to get the final system prompt. Then a new chat context is created with a provider config that is associated to a deployed model as configured for the agent. Additionally, the system prompt is set based on the prompt of the agent. Finally, the action microflow of the new provider config is set.
 * 
 * If an internal error occurs, the operation will return empty and the error is logged.
 */
public class ChatContext_Create_ForAgent extends UserAction<IMendixObject>
{
	/** @deprecated use Agent.getMendixObject() instead. */
	@java.lang.Deprecated(forRemoval = true)
	private final IMendixObject __Agent;
	private final agentcommons.proxies.Agent Agent;
	private final java.lang.String ActionMicroflow;
	private final IMendixObject ContextObject;
	/** @deprecated use OverwritingDeployedModel.getMendixObject() instead. */
	@java.lang.Deprecated(forRemoval = true)
	private final IMendixObject __OverwritingDeployedModel;
	private final genaicommons.proxies.DeployedModel OverwritingDeployedModel;

	public ChatContext_Create_ForAgent(
		IContext context,
		IMendixObject _agent,
		java.lang.String _actionMicroflow,
		IMendixObject _contextObject,
		IMendixObject _overwritingDeployedModel
	)
	{
		super(context);
		this.__Agent = _agent;
		this.Agent = _agent == null ? null : agentcommons.proxies.Agent.initialize(getContext(), _agent);
		this.ActionMicroflow = _actionMicroflow;
		this.ContextObject = _contextObject;
		this.__OverwritingDeployedModel = _overwritingDeployedModel;
		this.OverwritingDeployedModel = _overwritingDeployedModel == null ? null : genaicommons.proxies.DeployedModel.initialize(getContext(), _overwritingDeployedModel);
	}

	@java.lang.Override
	public IMendixObject executeAction() throws Exception
	{
		// BEGIN USER CODE
		
		try {
		    requireNonNull(Agent, "Agent is required.");
		    DeployedModel deployedModel = OverwritingDeployedModel != null ? OverwritingDeployedModel : AgentImpl.getDeployedModel(Agent);
		    requireNonNull(deployedModel, "No DeployedModel could be found for creating the ChatContext. Either pass the OverwritingDeployedModel or select a model on the agent version in use.");
		    
		    IMendixObject returnValue = Core.userActionCall("AgentCommons." + PromptToUse_GetAndReplace.class.getSimpleName())
		    		.withParams(Agent.getMendixObject(), ContextObject)
		    		.execute(getContext());
		    if (returnValue == null) {
		    	return null;
		    }
		    
		    PromptToUse promptToUse = PromptToUse.initialize(getContext(), returnValue);
		    return Core.userActionCall("ConversationalUI." + conversationalui.actions.ChatContext_Create_SetActionMicroflow.class.getSimpleName())
		    		.withParams(deployedModel.getMendixObject(), ActionMicroflow, promptToUse.getSystemPrompt(), Agent.getTitle())
		    		.execute(getContext());

		} catch (Exception e) {
		    LOGGER.error(e);
		    return null;
		}
		
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "ChatContext_Create_ForAgent";
	}

	// BEGIN EXTRA CODE
	
	private static final MxLogger LOGGER = new MxLogger(ChatContext_Create_ForAgent.class);
	
	// END EXTRA CODE
}
